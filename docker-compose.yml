version: "3"
services:
  geth-bootnode:
    hostname: geth-bootnode
    environment: 
      - nodekeyhex=5dcc3dae734171aa441608400c787467574c82a4aaac1ed3f3850ed622562aa4 #Needs to be fix, so that the miners know the resulting enode id
    build:
      context: ./bootnode
    ports: 
      - 30311:30311/udp
    networks:
      chainnet: 
        ipv4_address: 172.25.0.101 # The miners need to know the IP address later on

  geth-dev-miner-1:
    hostname: geth-dev-miner-1
    depends_on: 
      - geth-bootnode
    environment:
      - address=0x7bd20cf7a890c8eac5134d834a47787a6f563fe1
      - bootnodeId=e41477450d4e6ba6c30a3d818529f4cc086d82778ed1c831bccc5cb984c09a3ad41c7c36bfa9717a63c61cbb60d0bb37d74a9672c7ec1e9e32e691612c055b38
      - bootnodeIp=172.25.0.101  
    build: 
      context: ./node1
      args:
        password: karamela
        privatekey: 85dfcdbe1933a432f6704c8f86f125569c006d8094e723de3cd02dd41446dd26
    container_name: geth-miner-1
    ports:
      - 8502:8502
      - 30312:30312/udp
    volumes:
      - eth-data-1:/root/.ethash
    networks:
      chainnet:
        ipv4_address: 172.25.0.102 # The monitor needs to know this address

  geth-dev-miner-2:
    hostname: geth-dev-miner-2
    depends_on: 
      - geth-bootnode
    environment:
      - address=0xe36fdefdbba9776c5df2e569ff8cc0dc0fa4b83c #derived from the private key which is passed in the args
      - bootnodeId=e41477450d4e6ba6c30a3d818529f4cc086d82778ed1c831bccc5cb984c09a3ad41c7c36bfa9717a63c61cbb60d0bb37d74a9672c7ec1e9e32e691612c055b38
      - bootnodeIp=172.25.0.101  
    build: 
      context: ./node2
      args:
        password: karamela
        privatekey: 5ed3e2954a0175ad7b8aaee5f37df3d1efe08cee93e379b15a1078d7ec913ccc
    container_name: geth-miner-2
    ports:
      - 8503:8503
      - 30313:30313/udp
    volumes:
     - eth-data-2:/root/.ethash
    networks:
      chainnet:
        ipv4_address: 172.25.0.103

  geth-monitor-backend:
    hostname: geth-monitor-backend
    depends_on: 
      - geth-dev-miner-1
    build:
      context: ./monitor-backend
    container_name: monitor-backend
    networks:
      chainnet:

  geth-monitor-frontend:
   hostname: geth-monitor-frontend
   depends_on: 
     - geth-monitor-backend
   build:
     context: ./monitor-frontend
   container_name: monitor-frontend
   ports:
    - 3000:3000
   networks:
    chainnet:
      ipv4_address: 172.25.0.104

networks:
  chainnet:
    driver: bridge
    ipam:
      config:
      - subnet: 172.25.0.0/24

volumes:
  eth-data-1:
  eth-data-2:
#   eth-data-3: